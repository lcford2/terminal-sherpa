[cosmic-ray]
module-path = "ask"
timeout = 30.0
excluded-modules = []
test-command = "pytest test/"
exclude-lines = [
    ".*\\|.*",  # Lines with union operators
    ".*: .*->.*",  # Function return type annotations
    ".*: .*Optional\\[.*",  # Optional type annotations
]

[cosmic-ray.distributor]
name = "local"



# [cosmic-ray.filters.operators-filter]
# exclude-operators = [
#     # All ReplaceBinaryOperator mutations - complete list from cosmic-ray operators
#     "core/ReplaceBinaryOperator_Add_Sub",
#     "core/ReplaceBinaryOperator_Add_Mul",
#     "core/ReplaceBinaryOperator_Add_Div",
#     "core/ReplaceBinaryOperator_Add_FloorDiv",
#     "core/ReplaceBinaryOperator_Add_Mod",
#     "core/ReplaceBinaryOperator_Add_Pow",
#     "core/ReplaceBinaryOperator_Add_RShift",
#     "core/ReplaceBinaryOperator_Add_LShift",
#     "core/ReplaceBinaryOperator_Add_BitOr",
#     "core/ReplaceBinaryOperator_Add_BitAnd",
#     "core/ReplaceBinaryOperator_Add_BitXor",
#     "core/ReplaceBinaryOperator_Sub_Add",
#     "core/ReplaceBinaryOperator_Sub_Mul",
#     "core/ReplaceBinaryOperator_Sub_Div",
#     "core/ReplaceBinaryOperator_Sub_FloorDiv",
#     "core/ReplaceBinaryOperator_Sub_Mod",
#     "core/ReplaceBinaryOperator_Sub_Pow",
#     "core/ReplaceBinaryOperator_Sub_RShift",
#     "core/ReplaceBinaryOperator_Sub_LShift",
#     "core/ReplaceBinaryOperator_Sub_BitOr",
#     "core/ReplaceBinaryOperator_Sub_BitAnd",
#     "core/ReplaceBinaryOperator_Sub_BitXor",
#     "core/ReplaceBinaryOperator_Mul_Add",
#     "core/ReplaceBinaryOperator_Mul_Sub",
#     "core/ReplaceBinaryOperator_Mul_Div",
#     "core/ReplaceBinaryOperator_Mul_FloorDiv",
#     "core/ReplaceBinaryOperator_Mul_Mod",
#     "core/ReplaceBinaryOperator_Mul_Pow",
#     "core/ReplaceBinaryOperator_Mul_RShift",
#     "core/ReplaceBinaryOperator_Mul_LShift",
#     "core/ReplaceBinaryOperator_Mul_BitOr",
#     "core/ReplaceBinaryOperator_Mul_BitAnd",
#     "core/ReplaceBinaryOperator_Mul_BitXor",
#     "core/ReplaceBinaryOperator_Div_Add",
#     "core/ReplaceBinaryOperator_Div_Sub",
#     "core/ReplaceBinaryOperator_Div_Mul",
#     "core/ReplaceBinaryOperator_Div_FloorDiv",
#     "core/ReplaceBinaryOperator_Div_Mod",
#     "core/ReplaceBinaryOperator_Div_Pow",
#     "core/ReplaceBinaryOperator_Div_RShift",
#     "core/ReplaceBinaryOperator_Div_LShift",
#     "core/ReplaceBinaryOperator_Div_BitOr",
#     "core/ReplaceBinaryOperator_Div_BitAnd",
#     "core/ReplaceBinaryOperator_Div_BitXor",
#     "core/ReplaceBinaryOperator_FloorDiv_Add",
#     "core/ReplaceBinaryOperator_FloorDiv_Sub",
#     "core/ReplaceBinaryOperator_FloorDiv_Mul",
#     "core/ReplaceBinaryOperator_FloorDiv_Div",
#     "core/ReplaceBinaryOperator_FloorDiv_Mod",
#     "core/ReplaceBinaryOperator_FloorDiv_Pow",
#     "core/ReplaceBinaryOperator_FloorDiv_RShift",
#     "core/ReplaceBinaryOperator_FloorDiv_LShift",
#     "core/ReplaceBinaryOperator_FloorDiv_BitOr",
#     "core/ReplaceBinaryOperator_FloorDiv_BitAnd",
#     "core/ReplaceBinaryOperator_FloorDiv_BitXor",
#     "core/ReplaceBinaryOperator_Mod_Add",
#     "core/ReplaceBinaryOperator_Mod_Sub",
#     "core/ReplaceBinaryOperator_Mod_Mul",
#     "core/ReplaceBinaryOperator_Mod_Div",
#     "core/ReplaceBinaryOperator_Mod_FloorDiv",
#     "core/ReplaceBinaryOperator_Mod_Pow",
#     "core/ReplaceBinaryOperator_Mod_RShift",
#     "core/ReplaceBinaryOperator_Mod_LShift",
#     "core/ReplaceBinaryOperator_Mod_BitOr",
#     "core/ReplaceBinaryOperator_Mod_BitAnd",
#     "core/ReplaceBinaryOperator_Mod_BitXor",
#     "core/ReplaceBinaryOperator_Pow_Add",
#     "core/ReplaceBinaryOperator_Pow_Sub",
#     "core/ReplaceBinaryOperator_Pow_Mul",
#     "core/ReplaceBinaryOperator_Pow_Div",
#     "core/ReplaceBinaryOperator_Pow_FloorDiv",
#     "core/ReplaceBinaryOperator_Pow_Mod",
#     "core/ReplaceBinaryOperator_Pow_RShift",
#     "core/ReplaceBinaryOperator_Pow_LShift",
#     "core/ReplaceBinaryOperator_Pow_BitOr",
#     "core/ReplaceBinaryOperator_Pow_BitAnd",
#     "core/ReplaceBinaryOperator_Pow_BitXor",
#     "core/ReplaceBinaryOperator_RShift_Add",
#     "core/ReplaceBinaryOperator_RShift_Sub",
#     "core/ReplaceBinaryOperator_RShift_Mul",
#     "core/ReplaceBinaryOperator_RShift_Div",
#     "core/ReplaceBinaryOperator_RShift_FloorDiv",
#     "core/ReplaceBinaryOperator_RShift_Mod",
#     "core/ReplaceBinaryOperator_RShift_Pow",
#     "core/ReplaceBinaryOperator_RShift_LShift",
#     "core/ReplaceBinaryOperator_RShift_BitOr",
#     "core/ReplaceBinaryOperator_RShift_BitAnd",
#     "core/ReplaceBinaryOperator_RShift_BitXor",
#     "core/ReplaceBinaryOperator_LShift_Add",
#     "core/ReplaceBinaryOperator_LShift_Sub",
#     "core/ReplaceBinaryOperator_LShift_Mul",
#     "core/ReplaceBinaryOperator_LShift_Div",
#     "core/ReplaceBinaryOperator_LShift_FloorDiv",
#     "core/ReplaceBinaryOperator_LShift_Mod",
#     "core/ReplaceBinaryOperator_LShift_Pow",
#     "core/ReplaceBinaryOperator_LShift_RShift",
#     "core/ReplaceBinaryOperator_LShift_BitOr",
#     "core/ReplaceBinaryOperator_LShift_BitAnd",
#     "core/ReplaceBinaryOperator_LShift_BitXor",
#     "core/ReplaceBinaryOperator_BitOr_Add",
#     "core/ReplaceBinaryOperator_BitOr_Sub",
#     "core/ReplaceBinaryOperator_BitOr_Mul",
#     "core/ReplaceBinaryOperator_BitOr_Div",
#     "core/ReplaceBinaryOperator_BitOr_FloorDiv",
#     "core/ReplaceBinaryOperator_BitOr_Mod",
#     "core/ReplaceBinaryOperator_BitOr_Pow",
#     "core/ReplaceBinaryOperator_BitOr_RShift",
#     "core/ReplaceBinaryOperator_BitOr_LShift",
#     "core/ReplaceBinaryOperator_BitOr_BitAnd",
#     "core/ReplaceBinaryOperator_BitOr_BitXor",
#     "core/ReplaceBinaryOperator_BitAnd_Add",
#     "core/ReplaceBinaryOperator_BitAnd_Sub",
#     "core/ReplaceBinaryOperator_BitAnd_Mul",
#     "core/ReplaceBinaryOperator_BitAnd_Div",
#     "core/ReplaceBinaryOperator_BitAnd_FloorDiv",
#     "core/ReplaceBinaryOperator_BitAnd_Mod",
#     "core/ReplaceBinaryOperator_BitAnd_Pow",
#     "core/ReplaceBinaryOperator_BitAnd_RShift",
#     "core/ReplaceBinaryOperator_BitAnd_LShift",
#     "core/ReplaceBinaryOperator_BitAnd_BitOr",
#     "core/ReplaceBinaryOperator_BitAnd_BitXor",
#     "core/ReplaceBinaryOperator_BitXor_Add",
#     "core/ReplaceBinaryOperator_BitXor_Sub",
#     "core/ReplaceBinaryOperator_BitXor_Mul",
#     "core/ReplaceBinaryOperator_BitXor_Div",
#     "core/ReplaceBinaryOperator_BitXor_FloorDiv",
#     "core/ReplaceBinaryOperator_BitXor_Mod",
#     "core/ReplaceBinaryOperator_BitXor_Pow",
#     "core/ReplaceBinaryOperator_BitXor_RShift",
#     "core/ReplaceBinaryOperator_BitXor_LShift",
#     "core/ReplaceBinaryOperator_BitXor_BitOr",
#     "core/ReplaceBinaryOperator_BitXor_BitAnd",
# ]
